<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.user.UserRepository">

    <!-- ResultMap for User entity -->
    <resultMap autoMapping="true"
               id="UserResultMap"
               type="com.example.demo.model.user.User">
        <id column="id" property="id" />
        <result column="user_name" property="userName" />
        <result column="name" property="name" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="address" property="address" />
        <result column="date_of_birth" property="dateOfBirth" />
        <result column="user_role" property="userRole" />
        <result column="status" property="status" />
    </resultMap>

    <!-- SQL to find a user by email -->
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <!-- SQL to find a user by username -->
    <select id="findByUserName" resultMap="UserResultMap">
        SELECT * FROM users WHERE user_name = #{userName}
    </select>

    <!-- SQL to get all users -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT * FROM users
    </select>

    <!-- SQL to insert a new user -->
    <insert id="insert">
        INSERT INTO users (email, password, name, user_name, phone, address, )
        VALUES (#{id}, #{userName}, #{name}, #{password}, #{email}, #{phone}, #{address}, #{dateOfBirth}, #{userRole}, #{status})
    </insert>

    <!-- SQL to update a user -->
    <update id="update" parameterType="com.example.demo.model.user.User">
        UPDATE users
        SET user_name = #{userName}, name = #{name}, password = #{password}, email = #{email},
        phone = #{phone}, address = #{address}, date_of_birth = #{dateOfBirth}, user_role = #{userRole}, status = #{status}
        WHERE id = #{id}
    </update>

    <!-- SQL to delete a user -->
    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <update id="updateResetToken">
        UPDATE users SET reset_token = #{resetToken} WHERE email = #{email}
    </update>

    <update id="updatePassword">
        UPDATE users SET password = #{password} WHERE email = #{email}
    </update>

</mapper>
